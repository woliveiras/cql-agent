# ============================================================================
# CONFIGURAÇÃO DO PROVEDOR DE LLM
# ============================================================================

# Provedor de LLM (ollama, openai, gemini, anthropic)
LLM_PROVIDER=ollama

# Provedor de embeddings (ollama, openai, gemini)
# Se não especificado, usa o mesmo do LLM_PROVIDER
EMBEDDING_PROVIDER=ollama

# Configurações gerais de LLM
LLM_TEMPERATURE=0.3
LLM_MAX_TOKENS=500

# Timeout para chamadas LLM em segundos (padrão: 60)
# Aumentar para modelos mais lentos ou respostas complexas
LLM_TIMEOUT=60

# ============================================================================
# OLLAMA (Local) - Padrão
# ============================================================================

# URL do servidor Ollama
OLLAMA_BASE_URL=http://localhost:11434

# Modelos Ollama
OLLAMA_MODEL=qwen2.5:3b
OLLAMA_EMBEDDING_MODEL=nomic-embed-text

# ============================================================================
# OPENAI
# ============================================================================

# API Key da OpenAI (obrigatório se LLM_PROVIDER=openai)
# Obtenha em: https://platform.openai.com/api-keys
OPENAI_API_KEY=

# Modelos OpenAI
OPENAI_MODEL=gpt-4o-mini
OPENAI_EMBEDDING_MODEL=text-embedding-3-small

# Base URL customizada (opcional, para APIs compatíveis)
# OPENAI_BASE_URL=

# ============================================================================
# GOOGLE GEMINI
# ============================================================================

# API Key do Google Gemini (obrigatório se LLM_PROVIDER=gemini)
# Obtenha em: https://makersuite.google.com/app/apikey
GEMINI_API_KEY=

# Modelos Gemini
GEMINI_MODEL=gemini-1.5-flash
GEMINI_EMBEDDING_MODEL=models/embedding-001

# ============================================================================
# ANTHROPIC (Claude)
# ============================================================================

# API Key da Anthropic (obrigatório se LLM_PROVIDER=anthropic)
# Obtenha em: https://console.anthropic.com/settings/keys
ANTHROPIC_API_KEY=

# Modelos Anthropic
ANTHROPIC_MODEL=claude-3-5-sonnet-20241022

# ============================================================================
# OUTRAS CONFIGURAÇÕES
# ============================================================================

# Ativar RAG (base de conhecimento em PDFs)
USE_RAG=true

# Ativar busca web
USE_WEB_SEARCH=true

# Caminho do banco ChromaDB
CHROMA_DB_PATH=./chroma_db

# Número máximo de tentativas antes de sugerir profissional
MAX_REPAIR_ATTEMPTS=3

# ============================================================================
# LOGGING
# ============================================================================

# Ambiente (development, production)
ENVIRONMENT=development

# Origens permitidas para CORS (separadas por vírgula)
# Em desenvolvimento, origens locais são permitidas automaticamente
# Em produção, OBRIGATÓRIO definir origens específicas
# Exemplo: https://seu-app.com,https://app.exemplo.com
CORS_ORIGINS=

# Nível de log (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Formato de logs JSON (true/false)
# Em produção, recomenda-se true para melhor parsing
JSON_LOGS=false

# Arquivo de log (opcional)
# LOG_FILE=./logs/app.log

# ============================================================================
# REDIS - Session Management
# ============================================================================

# Habilitar Redis para sessões (true/false)
# Se false, usa armazenamento em memória (não persiste entre restarts)
USE_REDIS=false

# URL de conexão do Redis (formato: redis://host:port/db ou redis://:password@host:port/db)
# Em produção, SEMPRE use senha: redis://:sua_senha_forte@host:port/db
REDIS_URL=redis://localhost:6379/0

# Ou configuração separada (se REDIS_URL não estiver definido)
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0

# ⚠️ OBRIGATÓRIO EM PRODUÇÃO! Senha do Redis
# Gere uma senha forte usando: openssl rand -base64 32
# NUNCA deixe o Redis exposto sem senha em produção!
REDIS_PASSWORD=

# TTL padrão para sessões em segundos
# 1800 = 30 minutos, 3600 = 1 hora, 7200 = 2 horas
SESSION_TTL=3600

# Prefixo para chaves no Redis
REDIS_KEY_PREFIX=cql:session:

# ============================================================================
# AUTENTICAÇÃO E RATE LIMITING
# ============================================================================

# Habilitar sistema de autenticação anônima (true/false)
# Se false, não aplica nenhuma restrição de autenticação ou rate limit
AUTH_ENABLED=true

# Habilitar rate limiting (true/false)
# Requer AUTH_ENABLED=true para funcionar
RATE_LIMIT_ENABLED=true

# Limite de requests por janela de tempo
# Exemplo: 100 requests por hora
RATE_LIMIT=100

# Janela de tempo para rate limiting em segundos
# 3600 = 1 hora, 1800 = 30 minutos, 86400 = 24 horas
RATE_WINDOW=3600

# Chave secreta para assinatura de tokens JWT
# ⚠️ OBRIGATÓRIO EM PRODUÇÃO (mínimo 32 caracteres)!
# Gere uma chave forte usando: python -c "import secrets; print(secrets.token_hex(32))"
# NUNCA commit esta chave no git!
JWT_SECRET_KEY=

# Tempo de expiração de tokens JWT em horas
# Padrão: 24 horas
JWT_EXPIRATION_HOURS=24

# ============================================================================
# SEGURANÇA
# ============================================================================

# Tamanho máximo do corpo da requisição em bytes
# Padrão: 10485760 (10MB)
# Aumentar se precisar aceitar payloads maiores
MAX_REQUEST_BODY_SIZE=10485760
