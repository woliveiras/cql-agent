name: on_push_to_main

on:
  push:
    branches:
      - main

jobs:
  scan_node_dependencies:
    runs-on: ubuntu-latest
    name: pnpm audit
    steps:

      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20.x'
      
      - name: Install pnpm
        working-directory: ./web
        run: corepack enable && corepack prepare pnpm@latest --activate

      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('web/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        working-directory: ./web
        run: pnpm install

      - name: Run pnpm audit
        working-directory: ./web
        run: pnpm audit --audit-level=moderate

  quality_checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.x'
      
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      
      - name: Install dependencies
        run: |
          uv sync

      - name: Set up Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20.x'

      - name: Install pnpm
        run: corepack enable && corepack prepare pnpm@latest --activate

      - name: Cache pnpm modules
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('web/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install frontend dependencies
        working-directory: ./web
        run: pnpm install

      - name: biome lint
        working-directory: ./web
        run: pnpm run lint

      - name: Run frontend unit tests
        working-directory: ./web
        run: pnpm test -- --coverage
      
      - name: Run API linter (flake8)
        run: uv run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      
      - name: Run API linter (pylint)
        run: uv run pylint **/*.py --fail-under=8.0
        continue-on-error: true
      
      - name: Run API unit tests
        run: uv run pytest -v